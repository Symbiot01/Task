{% extends "_base.njk" %}

{% set thispage = 'events' %}
{% set pagetitle = 'Events' %}

{% block pagecontent %}
	<div class="quizContainer">
		<div class="countDown">
			<button id="startbtn" onclick="removeStartbtn()" >start</button>
			<button id="nextbtn" onclick="nextQs()">Next</button>
			<div id="count"></div>
			
		</div>
		<div class="quiz">
			<div class="qs" id="question-el"></div>
			<div class="option">
				<input type="radio" id="answer-1" name="option" value="HTML"/>
				<label id="option1" for="answer-1"></label><br/>
			</div>
			<div class="option">
				<input type="radio" id="answer-2" name="option" value="HTML"/>
				<label id="option2" for="answer-2"></label><br/>
			</div>
			<div class="option">
				<input type="radio" id="answer-3" name="option" value="HTML"/>
				<label id="option3" for="answer-3"></label><br/>
			</div>
			<div class="option">
				<input type="radio" id="answer-4" name="option" value="HTML"/>
				<label id="option4" for="answer-4"></label><br/>
			</div>
		</div>
		

	</div>
{% endblock %}


{% block customcss %}
	<link rel="stylesheet" type="text/css" href="/assets/styles/icons.css"/>
{% endblock %}

{% block customjs %}
	<script>
		let qsSeen = 0;
		let countLeftPerQs = 30;
		let next = false;
		const qs = {{ questions | safe }};
		function removeStartbtn () {
			document.getElementById("startbtn").style.display = "none";
			document.getElementById("nextbtn").style.display = "block";
			startQuiz(countLeftPerQs);
		}
		function startQuiz (totaltimeleft) {
			if (next) totaltimeleft = countLeftPerQs;
			setTimeout(() => {
				countDown(totaltimeleft);
			}, 1000);
		}
		const nextQs = () => next = true;
		async function countDown (totaltimeleft) {
			if (totaltimeleft != -1) document.getElementById("count").innerText = totaltimeleft;
			if (totaltimeleft === 0 && qsSeen === 10) {
				document.getElementById("count").innerText = "Time is Up!";
			} else {
				if (totaltimeleft == 30 || totaltimeleft === -1) {
					qsSeen++;
					totaltimeleft = countLeftPerQs;
					if (qsSeen < 11) {
						await setNewQuestions((qsSeen - 1) % 3);
						next = false;
						startQuiz(totaltimeleft - 1);
					} else {
						// submit
						document.getElementsByClassName('quiz')[0].innerText = "Thanks for attempting the quiz! :)";
					}
				} else {
					startQuiz(totaltimeleft - 1);
				}
			}
		}
		async function setNewQuestions (index) {
			const Q = qs[index];
			function generateHTML (components) {
				return components.map(component => {
					switch (component.type) {
						case 'image': return `<img src="${component.val}" style="${component.style || ''}"/>`;
						case 'mp3': return `<audio src="${component.val}" type="audio/mpeg"> </audio>`;
						case 'title': return `<h3>${component.val}</h3>`;
						default: return component.val;
					}
				}).join('');
			}
			document.getElementById("question-el").innerHTML = generateHTML(Q.q);
			for (let i = 1; i <= 4; i++) document.getElementById(`option${i}`).innerHTML = generateHTML(Q.options[i - 1]);
		}
	</script>
{% endblock %}